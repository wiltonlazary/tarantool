env = require('test_run')
---
...
test_run = env.new()
---
...
test_run:cmd("push filter '(error: .*)\\.lua:[0-9]+: ' to '\\1.lua:<line>: '")
---
- true
...
box.cfg.nosuchoption = 1
---
- error: 'builtin/box/load_cfg.lua:<line>: Attempt to modify a read-only table'
...
cfg_filter(box.cfg)
---
- - - background
    - false
  - - coredump
    - false
  - - hot_standby
    - false
  - - listen
    - <hidden>
  - - log_level
    - 5
  - - logger
    - <hidden>
  - - logger_nonblock
    - true
  - - panic_on_snap_error
    - true
  - - panic_on_wal_error
    - true
  - - pid_file
    - <hidden>
  - - read_only
    - false
  - - readahead
    - 16320
  - - rows_per_wal
    - 500000
  - - slab_alloc_arena
    - 0.1
  - - slab_alloc_factor
    - 1.1
  - - slab_alloc_maximal
    - <hidden>
  - - slab_alloc_minimal
    - <hidden>
  - - snap_dir
    - <hidden>
  - - snapshot_count
    - 6
  - - snapshot_period
    - 0
  - - too_long_threshold
    - 0.5
  - - vinyl
    - - - compact_wm
        - 2
      - - memory_limit
        - 1
      - - page_size
        - 8192
      - - range_size
        - 1073741824
      - - threads
        - 1
  - - vinyl_dir
    - <hidden>
  - - wal_dir
    - <hidden>
  - - wal_dir_rescan_delay
    - 2
  - - wal_mode
    - write
...
-- must be read-only
box.cfg()
---
- error: 'builtin/box/load_cfg.lua:<line>: bad argument #1 to ''pairs'' (table expected,
    got nil)'
...
cfg_filter(box.cfg)
---
- - - background
    - false
  - - coredump
    - false
  - - hot_standby
    - false
  - - listen
    - <hidden>
  - - log_level
    - 5
  - - logger
    - <hidden>
  - - logger_nonblock
    - true
  - - panic_on_snap_error
    - true
  - - panic_on_wal_error
    - true
  - - pid_file
    - <hidden>
  - - read_only
    - false
  - - readahead
    - 16320
  - - rows_per_wal
    - 500000
  - - slab_alloc_arena
    - 0.1
  - - slab_alloc_factor
    - 1.1
  - - slab_alloc_maximal
    - <hidden>
  - - slab_alloc_minimal
    - <hidden>
  - - snap_dir
    - <hidden>
  - - snapshot_count
    - 6
  - - snapshot_period
    - 0
  - - too_long_threshold
    - 0.5
  - - vinyl
    - - - compact_wm
        - 2
      - - memory_limit
        - 1
      - - page_size
        - 8192
      - - range_size
        - 1073741824
      - - threads
        - 1
  - - vinyl_dir
    - <hidden>
  - - wal_dir
    - <hidden>
  - - wal_dir_rescan_delay
    - 2
  - - wal_mode
    - write
...
-- check that cfg with unexpected parameter fails.
box.cfg{sherlock = 'holmes'}
---
- error: 'Incorrect value for option ''sherlock'': unexpected option'
...
-- check that cfg with unexpected type of parameter failes
box.cfg{listen = {}}
---
- error: 'Incorrect value for option ''listen'': should be one of types string, number'
...
box.cfg{wal_dir = 0}
---
- error: 'Incorrect value for option ''wal_dir'': should be of type string'
...
box.cfg{coredump = 'true'}
---
- error: 'Incorrect value for option ''coredump'': should be of type boolean'
...
--------------------------------------------------------------------------------
-- Test of hierarchical cfg type check
--------------------------------------------------------------------------------
box.cfg{slab_alloc_arena = "100500"}
---
- error: 'Incorrect value for option ''slab_alloc_arena'': should be of type number'
...
box.cfg{vinyl = "vinyl"}
---
- error: 'Incorrect value for option ''vinyl'': should be a table'
...
box.cfg{vinyl = {threads = "threads"}}
---
- error: 'Incorrect value for option ''vinyl.threads'': should be of type number'
...
--------------------------------------------------------------------------------
-- Test of default cfg options
--------------------------------------------------------------------------------
test_run:cmd('create server cfg_tester1 with script = "box/lua/cfg_test1.lua"')
---
- true
...
test_run:cmd("start server cfg_tester1")
---
- true
...
test_run:cmd('switch cfg_tester1')
---
- true
...
box.cfg.slab_alloc_arena, box.cfg.slab_alloc_factor, box.cfg.vinyl.threads
---
- 1
- 1.1
- 1
...
test_run:cmd("switch default")
---
- true
...
test_run:cmd("stop server cfg_tester1")
---
- true
...
test_run:cmd("cleanup server cfg_tester1")
---
- true
...
test_run:cmd('create server cfg_tester2 with script = "box/lua/cfg_test2.lua"')
---
- true
...
test_run:cmd("start server cfg_tester2")
---
- true
...
test_run:cmd('switch cfg_tester2')
---
- true
...
box.cfg.slab_alloc_arena, box.cfg.slab_alloc_factor, box.cfg.vinyl.threads
---
- 0.2
- 1.1
- 1
...
test_run:cmd("switch default")
---
- true
...
test_run:cmd("stop server cfg_tester2")
---
- true
...
test_run:cmd("cleanup server cfg_tester2")
---
- true
...
test_run:cmd('create server cfg_tester3 with script = "box/lua/cfg_test3.lua"')
---
- true
...
test_run:cmd("start server cfg_tester3")
---
- true
...
test_run:cmd('switch cfg_tester3')
---
- true
...
box.cfg.slab_alloc_arena, box.cfg.slab_alloc_factor, box.cfg.vinyl.threads
---
- 0.2
- 1.1
- 10
...
test_run:cmd("switch default")
---
- true
...
test_run:cmd("stop server cfg_tester3")
---
- true
...
test_run:cmd("cleanup server cfg_tester3")
---
- true
...
test_run:cmd('create server cfg_tester4 with script = "box/lua/cfg_test4.lua"')
---
- true
...
test_run:cmd("start server cfg_tester4")
---
- true
...
test_run:cmd('switch cfg_tester4')
---
- true
...
box.cfg.slab_alloc_arena, box.cfg.slab_alloc_factor, box.cfg.vinyl.threads
---
- 1
- 3.14
- 1
...
test_run:cmd("switch default")
---
- true
...
test_run:cmd("stop server cfg_tester4")
---
- true
...
test_run:cmd("cleanup server cfg_tester4")
---
- true
...
test_run:cmd("clear filter")
---
- true
...
