env = require('test_run')
---
...
test_run = env.new()
---
...
test_run:cmd('create server vinyl_info with script="vinyl/vinyl_info.lua"')
---
- true
...
test_run:cmd("start server vinyl_info")
---
- true
...
test_run:cmd('switch vinyl_info')
---
- true
...
space = box.schema.space.create('test', { engine = 'vinyl' })
---
...
index = space:create_index('primary', { type = 'tree', parts = {1, 'string'} })
---
...
space:replace({'xxx'})
---
- ['xxx']
...
space:get({'xxx'})
---
- ['xxx']
...
space:select()
---
- - ['xxx']
...
space:delete({'xxx'})
---
...
test_run:cmd("setopt delimiter ';'")
---
- true
...
for _, v in ipairs({ 'path', 'build', 'tx_latency', 'cursor_latency',
                     'get_latency', 'gc_active', 'run_avg', 'run_count',
                     'page_count', 'memory_used', 'run_max', 'run_histogram',
                     'size', 'size_uncompressed', 'used', 'count',
                     'rps', 'total', 'bandwidth', 'avg', 'max', 'watermark' }) do
    test_run:cmd("push filter '"..v..": .*' to '"..v..": <"..v..">'")
end;
---
...
test_run:cmd("setopt delimiter ''");
---
- true
...
box.snapshot()
---
- ok
...
box_info_sort(box.info.vinyl())
---
- - db:
    - 512/0:
      - count: <count>
      - memory_used: <used>
      - page_count: <count>
      - page_size: <size>
      - range_count: <count>
      - range_size: <size>
      - run_avg: <avg>
      - run_count: <count>
      - run_histogram: <run_histogram>
      - size: <size>
  - memory:
    - limit: 536870912
    - min_lsn: 9223372036854775807
    - ratio: 0%
    - used: <used>
    - watermark: <watermark>
  - metric:
    - lsn: 5
  - performance:
    - cursor:
      - rps: <rps>
      - total: <total>
    - cursor_latency:
      - avg: <avg>
      - max: <max>
    - cursor_ops:
      - rps: <rps>
      - total: <total>
    - dump_bandwidth: <bandwidth>
    - dump_total: <total>
    - get:
      - rps: <rps>
      - total: <total>
    - get_latency:
      - avg: <avg>
      - max: <max>
    - tx:
      - rps: <rps>
      - total: <total>
    - tx_active_ro: 0
    - tx_active_rw: 0
    - tx_conflict: 0
    - tx_latency:
      - avg: <avg>
      - max: <max>
    - tx_ops:
      - rps: <rps>
      - total: <total>
    - tx_rollback: 1
    - tx_write:
      - rps: <rps>
      - total: <total>
    - write_count: <count>
  - vinyl:
    - build: <build>
    - path: <path>
...
test_run:cmd("clear filter")
---
- true
...
space:drop()
---
...
test_run:cmd("setopt delimiter ';'")
---
- true
...
for i = 1, 16 do
	c = box.schema.space.create('i'..i, { engine='vinyl' })
	c:create_index('pk')
end;
---
...
box_info_sort(box.info.vinyl().db);
---
- - 513/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 514/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 515/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 516/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 517/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 518/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 519/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 520/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 521/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 522/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 523/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 524/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 525/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 526/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 527/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
  - 528/0:
    - count: 0
    - memory_used: 0
    - page_count: 0
    - page_size: 1024
    - range_count: 1
    - range_size: 65536
    - run_avg: 0
    - run_count: 0
    - run_histogram: '[0]:1'
    - size: 0
...
for i = 1, 16 do
	box.space['i'..i]:drop()
end;
---
...
test_run:cmd("setopt delimiter ''");
---
- true
...
space = box.schema.space.create('test', { engine = 'vinyl' })
---
...
index = space:create_index('primary')
---
...
index2 = space:create_index('secondary', { parts = {2, 'unsigned'} })
---
...
old_count = box.info.vinyl().performance.write_count
---
...
space:insert({1, 1})
---
- [1, 1]
...
space:insert({2, 2})
---
- [2, 2]
...
space:insert({3, 3})
---
- [3, 3]
...
space:insert({4, 4})
---
- [4, 4]
...
box.info.vinyl().performance.write_count - old_count == 8
---
- true
...
space:drop()
---
...
space = box.schema.space.create('test', { engine = 'vinyl' })
---
...
index = space:create_index('primary')
---
...
space:replace({1})
---
- [1]
...
box.info.vinyl().memory.min_lsn == box.info.vclock[1]
---
- true
...
space:drop()
---
...
box.info.vinyl().memory.min_lsn
---
- 9223372036854775807
...
test_run:cmd('switch default')
---
- true
...
test_run:cmd("stop server vinyl_info")
---
- true
...
