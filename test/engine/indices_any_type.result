-- Test for unique indices
-- Tests for TREE index type
env = require('test_run')
---
...
test_run = env.new()
---
...
engine = test_run:get_cfg('engine')
---
...
s0 = box.schema.space.create('my_space1', { engine = engine })
---
...
i0 = s0:create_index('my_space1_idx1', {type='TREE', parts={1, 'NUMBER'}, unique=true})
---
...
s0:insert({10})
---
- [10]
...
s0:insert({11})
---
- [11]
...
s0:insert({12})
---
- [12]
...
s0:insert({13})
---
- [13]
...
s0:select{}
---
- - [10]
  - [11]
  - [12]
  - [13]
...
s0:insert({3})
---
- [3]
...
s0:insert({4})
---
- [4]
...
s0:insert({5})
---
- [5]
...
s0:insert({6})
---
- [6]
...
s0:select{}
---
- - [3]
  - [4]
  - [5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
...
s0:insert({-5})
---
- [-5]
...
s0:insert({-6})
---
- [-6]
...
s0:insert({-7})
---
- [-7]
...
s0:insert({-8})
---
- [-8]
...
s0:select{}
---
- - [-8]
  - [-7]
  - [-6]
  - [-5]
  - [3]
  - [4]
  - [5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
...
s0:insert({-10})
---
- [-10]
...
s0:insert({-11})
---
- [-11]
...
s0:insert({-12})
---
- [-12]
...
s0:insert({-13})
---
- [-13]
...
s0:select{}
---
- - [-13]
  - [-12]
  - [-11]
  - [-10]
  - [-8]
  - [-7]
  - [-6]
  - [-5]
  - [3]
  - [4]
  - [5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
...
s0:insert({3.5})
---
- [3.5]
...
s0:insert({4.5})
---
- [4.5]
...
s0:insert({5.5})
---
- [5.5]
...
s0:select{}
---
- - [-13]
  - [-12]
  - [-11]
  - [-10]
  - [-8]
  - [-7]
  - [-6]
  - [-5]
  - [3]
  - [3.5]
  - [4]
  - [4.5]
  - [5]
  - [5.5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
...
s0:insert({-3.5})
---
- [-3.5]
...
s0:insert({-4.5})
---
- [-4.5]
...
s0:insert({-5.5})
---
- [-5.5]
...
s0:select{}
---
- - [-13]
  - [-12]
  - [-11]
  - [-10]
  - [-8]
  - [-7]
  - [-6]
  - [-5.5]
  - [-5]
  - [-4.5]
  - [-3.5]
  - [3]
  - [3.5]
  - [4]
  - [4.5]
  - [5]
  - [5.5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
...
s0:drop()
---
...
s1 = box.schema.space.create('my_space2', { engine = engine })
---
...
i1 = s1:create_index('my_space2_idx1', {type='TREE', parts={1, 'SCALAR'}, unique=true})
---
...
s1:insert({10})
---
- [10]
...
s1:insert({11})
---
- [11]
...
s1:insert({12})
---
- [12]
...
s1:insert({13})
---
- [13]
...
s1:select{}
---
- - [10]
  - [11]
  - [12]
  - [13]
...
s1:insert({3})
---
- [3]
...
s1:insert({4})
---
- [4]
...
s1:insert({5})
---
- [5]
...
s1:insert({6})
---
- [6]
...
s1:select{}
---
- - [3]
  - [4]
  - [5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
...
s1:insert({'ffff'})
---
- ['ffff']
...
s1:insert({'gggg'})
---
- ['gggg']
...
s1:insert({'hhhh'})
---
- ['hhhh']
...
s1:select{}
---
- - [3]
  - [4]
  - [5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
  - ['ffff']
  - ['gggg']
  - ['hhhh']
...
s1:insert({'aaaa'})
---
- ['aaaa']
...
s1:insert({'bbbb'})
---
- ['bbbb']
...
s1:insert({'cccc'})
---
- ['cccc']
...
s1:select{}
---
- - [3]
  - [4]
  - [5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
  - ['aaaa']
  - ['bbbb']
  - ['cccc']
  - ['ffff']
  - ['gggg']
  - ['hhhh']
...
s1:insert({3.5})
---
- [3.5]
...
s1:insert({4.5})
---
- [4.5]
...
s1:insert({5.5})
---
- [5.5]
...
s1:select{}
---
- - [3]
  - [3.5]
  - [4]
  - [4.5]
  - [5]
  - [5.5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
  - ['aaaa']
  - ['bbbb']
  - ['cccc']
  - ['ffff']
  - ['gggg']
  - ['hhhh']
...
s1:insert({-3.5})
---
- [-3.5]
...
s1:insert({-4.5})
---
- [-4.5]
...
s1:insert({-5.5})
---
- [-5.5]
...
s1:select{}
---
- - [-5.5]
  - [-4.5]
  - [-3.5]
  - [3]
  - [3.5]
  - [4]
  - [4.5]
  - [5]
  - [5.5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
  - ['aaaa']
  - ['bbbb']
  - ['cccc']
  - ['ffff']
  - ['gggg']
  - ['hhhh']
...
s1:insert({true})
---
- [true]
...
s1:insert({false})
---
- [false]
...
s1:insert({1})
---
- [1]
...
s1:insert({0})
---
- [0]
...
s1:insert({'!!!!'})
---
- ['!!!!']
...
s1:insert({'????'})
---
- ['????']
...
s1:select{}
---
- - [false]
  - [true]
  - [-5.5]
  - [-4.5]
  - [-3.5]
  - [0]
  - [1]
  - [3]
  - [3.5]
  - [4]
  - [4.5]
  - [5]
  - [5.5]
  - [6]
  - [10]
  - [11]
  - [12]
  - [13]
  - ['!!!!']
  - ['????']
  - ['aaaa']
  - ['bbbb']
  - ['cccc']
  - ['ffff']
  - ['gggg']
  - ['hhhh']
...
s1:drop()
---
...
s2 = box.schema.space.create('my_space3', { engine = engine })
---
...
i2_1 = s2:create_index('my_space3_idx1', {type='TREE', parts={1, 'SCALAR', 2, 'INT', 3, 'NUMBER'}, unique=true})
---
...
s2:insert({10, 1, -1, 'z', true})
---
- [10, 1, -1, 'z', true]
...
s2:insert({11, 2, 2, 'g', false})
---
- [11, 2, 2, 'g', false]
...
s2:insert({12, 3, -3, 'e', -100.5})
---
- [12, 3, -3, 'e', -100.5]
...
s2:insert({13, 4, 4, 'h', 200})
---
- [13, 4, 4, 'h', 200]
...
s2:select{}
---
- - [10, 1, -1, 'z', true]
  - [11, 2, 2, 'g', false]
  - [12, 3, -3, 'e', -100.5]
  - [13, 4, 4, 'h', 200]
...
s2:insert({3, 5, -5, 'w', 'strstr'})
---
- [3, 5, -5, 'w', 'strstr']
...
s2:insert({4, 6, 6, 'q', ';;;;'})
---
- [4, 6, 6, 'q', ';;;;']
...
s2:insert({5, 7, -7, 'c', '???'})
---
- [5, 7, -7, 'c', '???']
...
s2:insert({6, 8, 8, 'k', '!!!'})
---
- [6, 8, 8, 'k', '!!!']
...
s2:select{}
---
- - [3, 5, -5, 'w', 'strstr']
  - [4, 6, 6, 'q', ';;;;']
  - [5, 7, -7, 'c', '???']
  - [6, 8, 8, 'k', '!!!']
  - [10, 1, -1, 'z', true]
  - [11, 2, 2, 'g', false]
  - [12, 3, -3, 'e', -100.5]
  - [13, 4, 4, 'h', 200]
...
s2:insert({'ffff', 9, -9, 'm', '123'})
---
- ['ffff', 9, -9, 'm', '123']
...
s2:insert({'gggg', 10, 10, 'r', '456'})
---
- ['gggg', 10, 10, 'r', '456']
...
s2:insert({'hhhh', 11, -11, 'i', 55555})
---
- ['hhhh', 11, -11, 'i', 55555]
...
s2:insert({'hhhh', 11, -10, 'i', 55556})
---
- ['hhhh', 11, -10, 'i', 55556]
...
s2:insert({'hhhh', 11, -12, 'i', 55554})
---
- ['hhhh', 11, -12, 'i', 55554]
...
s2:select{}
---
- - [3, 5, -5, 'w', 'strstr']
  - [4, 6, 6, 'q', ';;;;']
  - [5, 7, -7, 'c', '???']
  - [6, 8, 8, 'k', '!!!']
  - [10, 1, -1, 'z', true]
  - [11, 2, 2, 'g', false]
  - [12, 3, -3, 'e', -100.5]
  - [13, 4, 4, 'h', 200]
  - ['ffff', 9, -9, 'm', '123']
  - ['gggg', 10, 10, 'r', '456']
  - ['hhhh', 11, -12, 'i', 55554]
  - ['hhhh', 11, -11, 'i', 55555]
  - ['hhhh', 11, -10, 'i', 55556]
...
s2:insert({'aaaa', 12, 12, 'o', 333})
---
- ['aaaa', 12, 12, 'o', 333]
...
s2:insert({'bbbb', 13, -13, 'p', '123'})
---
- ['bbbb', 13, -13, 'p', '123']
...
s2:insert({'cccc', 14, 14, 'l', 123})
---
- ['cccc', 14, 14, 'l', 123]
...
s2:select{}
---
- - [3, 5, -5, 'w', 'strstr']
  - [4, 6, 6, 'q', ';;;;']
  - [5, 7, -7, 'c', '???']
  - [6, 8, 8, 'k', '!!!']
  - [10, 1, -1, 'z', true]
  - [11, 2, 2, 'g', false]
  - [12, 3, -3, 'e', -100.5]
  - [13, 4, 4, 'h', 200]
  - ['aaaa', 12, 12, 'o', 333]
  - ['bbbb', 13, -13, 'p', '123']
  - ['cccc', 14, 14, 'l', 123]
  - ['ffff', 9, -9, 'm', '123']
  - ['gggg', 10, 10, 'r', '456']
  - ['hhhh', 11, -12, 'i', 55554]
  - ['hhhh', 11, -11, 'i', 55555]
  - ['hhhh', 11, -10, 'i', 55556]
...
s2:insert({3.5, 15, -15, 'n', 500})
---
- [3.5, 15, -15, 'n', 500]
...
s2:insert({4.5, 16, 16, 'b', 'ghtgtg'})
---
- [4.5, 16, 16, 'b', 'ghtgtg']
...
s2:insert({5.5, 17, -17, 'v', '"""""'})
---
- [5.5, 17, -17, 'v', '"""""']
...
s2:select{}
---
- - [3, 5, -5, 'w', 'strstr']
  - [3.5, 15, -15, 'n', 500]
  - [4, 6, 6, 'q', ';;;;']
  - [4.5, 16, 16, 'b', 'ghtgtg']
  - [5, 7, -7, 'c', '???']
  - [5.5, 17, -17, 'v', '"""""']
  - [6, 8, 8, 'k', '!!!']
  - [10, 1, -1, 'z', true]
  - [11, 2, 2, 'g', false]
  - [12, 3, -3, 'e', -100.5]
  - [13, 4, 4, 'h', 200]
  - ['aaaa', 12, 12, 'o', 333]
  - ['bbbb', 13, -13, 'p', '123']
  - ['cccc', 14, 14, 'l', 123]
  - ['ffff', 9, -9, 'm', '123']
  - ['gggg', 10, 10, 'r', '456']
  - ['hhhh', 11, -12, 'i', 55554]
  - ['hhhh', 11, -11, 'i', 55555]
  - ['hhhh', 11, -10, 'i', 55556]
...
s2:insert({-3.5, 18, 18, 'x', '---'})
---
- [-3.5, 18, 18, 'x', '---']
...
s2:insert({-4.5, 19, -19, 'a', 56.789})
---
- [-4.5, 19, -19, 'a', 56.789]
...
s2:insert({-5.5, 20, 20, 'f', -138.4})
---
- [-5.5, 20, 20, 'f', -138.4]
...
s2:select{}
---
- - [-5.5, 20, 20, 'f', -138.4]
  - [-4.5, 19, -19, 'a', 56.789]
  - [-3.5, 18, 18, 'x', '---']
  - [3, 5, -5, 'w', 'strstr']
  - [3.5, 15, -15, 'n', 500]
  - [4, 6, 6, 'q', ';;;;']
  - [4.5, 16, 16, 'b', 'ghtgtg']
  - [5, 7, -7, 'c', '???']
  - [5.5, 17, -17, 'v', '"""""']
  - [6, 8, 8, 'k', '!!!']
  - [10, 1, -1, 'z', true]
  - [11, 2, 2, 'g', false]
  - [12, 3, -3, 'e', -100.5]
  - [13, 4, 4, 'h', 200]
  - ['aaaa', 12, 12, 'o', 333]
  - ['bbbb', 13, -13, 'p', '123']
  - ['cccc', 14, 14, 'l', 123]
  - ['ffff', 9, -9, 'm', '123']
  - ['gggg', 10, 10, 'r', '456']
  - ['hhhh', 11, -12, 'i', 55554]
  - ['hhhh', 11, -11, 'i', 55555]
  - ['hhhh', 11, -10, 'i', 55556]
...
s2:insert({true, 21, -21, 'y', 50})
---
- [true, 21, -21, 'y', 50]
...
s2:insert({false, 22, 22, 's', 60})
---
- [false, 22, 22, 's', 60]
...
s2:insert({'!!!!', 23, -23, 'u', 0})
---
- ['!!!!', 23, -23, 'u', 0]
...
s2:insert({'????', 24, 24, 'j', 70})
---
- ['????', 24, 24, 'j', 70]
...
s2:select{}
---
- - [false, 22, 22, 's', 60]
  - [true, 21, -21, 'y', 50]
  - [-5.5, 20, 20, 'f', -138.4]
  - [-4.5, 19, -19, 'a', 56.789]
  - [-3.5, 18, 18, 'x', '---']
  - [3, 5, -5, 'w', 'strstr']
  - [3.5, 15, -15, 'n', 500]
  - [4, 6, 6, 'q', ';;;;']
  - [4.5, 16, 16, 'b', 'ghtgtg']
  - [5, 7, -7, 'c', '???']
  - [5.5, 17, -17, 'v', '"""""']
  - [6, 8, 8, 'k', '!!!']
  - [10, 1, -1, 'z', true]
  - [11, 2, 2, 'g', false]
  - [12, 3, -3, 'e', -100.5]
  - [13, 4, 4, 'h', 200]
  - ['!!!!', 23, -23, 'u', 0]
  - ['????', 24, 24, 'j', 70]
  - ['aaaa', 12, 12, 'o', 333]
  - ['bbbb', 13, -13, 'p', '123']
  - ['cccc', 14, 14, 'l', 123]
  - ['ffff', 9, -9, 'm', '123']
  - ['gggg', 10, 10, 'r', '456']
  - ['hhhh', 11, -12, 'i', 55554]
  - ['hhhh', 11, -11, 'i', 55555]
  - ['hhhh', 11, -10, 'i', 55556]
...
s2.index.my_space3_idx2:select{}
---
- error: '[string "return s2.index.my_space3_idx2:select{} "]:1: attempt to index
    field ''my_space3_idx2'' (a nil value)'
...
s2:drop()
---
...
-- Tests for NULL
mp = require('msgpack')
---
...
s4 = box.schema.space.create('my_space5', { engine = engine })
---
...
i4_1 = s4:create_index('my_space5_idx1', {type='TREE', parts={1, 'SCALAR', 2, 'INT', 3, 'NUMBER'}, unique=true})
---
...
s4:insert({mp.NULL, 1, 1, 1})
---
- error: 'Tuple field 1 type does not match one required by operation: expected SCALAR'
...
s4:insert({2, mp.NULL, 2, 2}) -- all nulls must fail
---
- error: 'Tuple field 2 type does not match one required by operation: expected INT'
...
s4:insert({3, 3, mp.NULL, 3})
---
- error: 'Tuple field 3 type does not match one required by operation: expected NUMBER'
...
s4:insert({4, 4, 4, mp.NULL})
---
- [4, 4, 4, null]
...
s4:drop()
---
...
-- Test for nonunique indices
s5 = box.schema.space.create('my_space6', { engine = engine })
---
...
i5_1 = s5:create_index('my_space6_idx1', {type='TREE', parts={1, 'NUM'}, unique=true})
---
...
i5_2 = s5:create_index('my_space6_idx2', {type='TREE', parts={2, 'SCALAR'}, unique=false})
---
...
test_run:cmd("setopt delimiter ';'");
---
- true
...
function less(a, b)
    if type(a[2]) ~= type(b[2]) then
        return type(a[2]) < type(b[2])
    end
    if type(a[2]) == 'boolean' then
        return a[2] == false and b[2] == true
    end
    if a[2] == b[2] then
        return a[1] < b[1]
    end
    return a[2] < b[2]
end;
---
...
test_run:cmd("setopt delimiter ''");
---
- true
...
function sort(t) table.sort(t, less) return t end
---
...
s5:insert({1, "123"})
---
- [1, '123']
...
s5:insert({2, "123"})
---
- [2, '123']
...
s5:insert({3, "123"})
---
- [3, '123']
...
s5:insert({4, 123})
---
- [4, 123]
...
s5:insert({5, 123})
---
- [5, 123]
...
s5:insert({6, true})
---
- [6, true]
...
s5:insert({7, true})
---
- [7, true]
...
s5:insert({8, mp.NULL}) -- must fail
---
- error: 'Tuple field 2 type does not match one required by operation: expected SCALAR'
...
s5:insert({9, -40.5})
---
- [9, -40.5]
...
s5:insert({10, -39.5})
---
- [10, -39.5]
...
s5:insert({11, -38.5})
---
- [11, -38.5]
...
s5:insert({12, 100.5})
---
- [12, 100.5]
...
s5:select{}
---
- - [1, '123']
  - [2, '123']
  - [3, '123']
  - [4, 123]
  - [5, 123]
  - [6, true]
  - [7, true]
  - [9, -40.5]
  - [10, -39.5]
  - [11, -38.5]
  - [12, 100.5]
...
sort(i5_2:select({123}))
---
- - [4, 123]
  - [5, 123]
...
sort(i5_2:select({"123"}))
---
- - [1, '123']
  - [2, '123']
  - [3, '123']
...
sort(i5_2:select({true}))
---
- - [6, true]
  - [7, true]
...
sort(i5_2:select({false}))
---
- []
...
sort(i5_2:select({true}))
---
- - [6, true]
  - [7, true]
...
sort(i5_2:select({-38.5}))
---
- - [11, -38.5]
...
sort(i5_2:select({-40}, {iterator = 'GE'}))
---
- - [10, -39.5]
  - [11, -38.5]
  - [12, 100.5]
  - [4, 123]
  - [5, 123]
  - [1, '123']
  - [2, '123']
  - [3, '123']
...
s5:drop()
---
...
