test_run = require('test_run')
---
...
inspector = test_run.new()
---
...
engine = inspector:get_cfg('engine')
---
...
-- delete (str)
space = box.schema.space.create('test', { engine = engine })
---
...
index = space:create_index('primary', { type = 'tree', parts = {1, 'str'} })
---
...
for key = 1, 100 do space:replace({tostring(key)}) end
---
...
t = {}
---
...
for key = 1, 100 do table.insert(t, space:get({tostring(key)})) end
---
...
t
---
- - ['1']
  - ['2']
  - ['3']
  - ['4']
  - ['5']
  - ['6']
  - ['7']
  - ['8']
  - ['9']
  - ['10']
  - ['11']
  - ['12']
  - ['13']
  - ['14']
  - ['15']
  - ['16']
  - ['17']
  - ['18']
  - ['19']
  - ['20']
  - ['21']
  - ['22']
  - ['23']
  - ['24']
  - ['25']
  - ['26']
  - ['27']
  - ['28']
  - ['29']
  - ['30']
  - ['31']
  - ['32']
  - ['33']
  - ['34']
  - ['35']
  - ['36']
  - ['37']
  - ['38']
  - ['39']
  - ['40']
  - ['41']
  - ['42']
  - ['43']
  - ['44']
  - ['45']
  - ['46']
  - ['47']
  - ['48']
  - ['49']
  - ['50']
  - ['51']
  - ['52']
  - ['53']
  - ['54']
  - ['55']
  - ['56']
  - ['57']
  - ['58']
  - ['59']
  - ['60']
  - ['61']
  - ['62']
  - ['63']
  - ['64']
  - ['65']
  - ['66']
  - ['67']
  - ['68']
  - ['69']
  - ['70']
  - ['71']
  - ['72']
  - ['73']
  - ['74']
  - ['75']
  - ['76']
  - ['77']
  - ['78']
  - ['79']
  - ['80']
  - ['81']
  - ['82']
  - ['83']
  - ['84']
  - ['85']
  - ['86']
  - ['87']
  - ['88']
  - ['89']
  - ['90']
  - ['91']
  - ['92']
  - ['93']
  - ['94']
  - ['95']
  - ['96']
  - ['97']
  - ['98']
  - ['99']
  - ['100']
...
for key = 1, 100 do space:delete({tostring(key)}) end
---
...
for key = 1, 100 do assert(space:get({tostring(key)}) == nil) end
---
...
space:delete({tostring(7)})
---
...
space:drop()
---
...
-- delete (num)
space = box.schema.space.create('test', { engine = engine })
---
...
index = space:create_index('primary', { type = 'tree', parts = {1, 'num'} })
---
...
for key = 1, 100 do space:replace({key}) end
---
...
t = {}
---
...
for key = 1, 100 do table.insert(t, space:get({key})) end
---
...
t
---
- - [1]
  - [2]
  - [3]
  - [4]
  - [5]
  - [6]
  - [7]
  - [8]
  - [9]
  - [10]
  - [11]
  - [12]
  - [13]
  - [14]
  - [15]
  - [16]
  - [17]
  - [18]
  - [19]
  - [20]
  - [21]
  - [22]
  - [23]
  - [24]
  - [25]
  - [26]
  - [27]
  - [28]
  - [29]
  - [30]
  - [31]
  - [32]
  - [33]
  - [34]
  - [35]
  - [36]
  - [37]
  - [38]
  - [39]
  - [40]
  - [41]
  - [42]
  - [43]
  - [44]
  - [45]
  - [46]
  - [47]
  - [48]
  - [49]
  - [50]
  - [51]
  - [52]
  - [53]
  - [54]
  - [55]
  - [56]
  - [57]
  - [58]
  - [59]
  - [60]
  - [61]
  - [62]
  - [63]
  - [64]
  - [65]
  - [66]
  - [67]
  - [68]
  - [69]
  - [70]
  - [71]
  - [72]
  - [73]
  - [74]
  - [75]
  - [76]
  - [77]
  - [78]
  - [79]
  - [80]
  - [81]
  - [82]
  - [83]
  - [84]
  - [85]
  - [86]
  - [87]
  - [88]
  - [89]
  - [90]
  - [91]
  - [92]
  - [93]
  - [94]
  - [95]
  - [96]
  - [97]
  - [98]
  - [99]
  - [100]
...
for key = 1, 100 do space:delete({key}) end
---
...
for key = 1, 100 do assert(space:get({key}) == nil) end
---
...
space:delete({7})
---
...
space:drop()
---
...
-- delete multi-part (num, num)
space = box.schema.space.create('test', { engine = engine })
---
...
index = space:create_index('primary', { type = 'tree', parts = {1, 'num', 2, 'num'} })
---
...
for key = 1, 100 do space:replace({key, key}) end
---
...
t = {}
---
...
for key = 1, 100 do table.insert(t, space:get({key, key})) end
---
...
t
---
- - [1, 1]
  - [2, 2]
  - [3, 3]
  - [4, 4]
  - [5, 5]
  - [6, 6]
  - [7, 7]
  - [8, 8]
  - [9, 9]
  - [10, 10]
  - [11, 11]
  - [12, 12]
  - [13, 13]
  - [14, 14]
  - [15, 15]
  - [16, 16]
  - [17, 17]
  - [18, 18]
  - [19, 19]
  - [20, 20]
  - [21, 21]
  - [22, 22]
  - [23, 23]
  - [24, 24]
  - [25, 25]
  - [26, 26]
  - [27, 27]
  - [28, 28]
  - [29, 29]
  - [30, 30]
  - [31, 31]
  - [32, 32]
  - [33, 33]
  - [34, 34]
  - [35, 35]
  - [36, 36]
  - [37, 37]
  - [38, 38]
  - [39, 39]
  - [40, 40]
  - [41, 41]
  - [42, 42]
  - [43, 43]
  - [44, 44]
  - [45, 45]
  - [46, 46]
  - [47, 47]
  - [48, 48]
  - [49, 49]
  - [50, 50]
  - [51, 51]
  - [52, 52]
  - [53, 53]
  - [54, 54]
  - [55, 55]
  - [56, 56]
  - [57, 57]
  - [58, 58]
  - [59, 59]
  - [60, 60]
  - [61, 61]
  - [62, 62]
  - [63, 63]
  - [64, 64]
  - [65, 65]
  - [66, 66]
  - [67, 67]
  - [68, 68]
  - [69, 69]
  - [70, 70]
  - [71, 71]
  - [72, 72]
  - [73, 73]
  - [74, 74]
  - [75, 75]
  - [76, 76]
  - [77, 77]
  - [78, 78]
  - [79, 79]
  - [80, 80]
  - [81, 81]
  - [82, 82]
  - [83, 83]
  - [84, 84]
  - [85, 85]
  - [86, 86]
  - [87, 87]
  - [88, 88]
  - [89, 89]
  - [90, 90]
  - [91, 91]
  - [92, 92]
  - [93, 93]
  - [94, 94]
  - [95, 95]
  - [96, 96]
  - [97, 97]
  - [98, 98]
  - [99, 99]
  - [100, 100]
...
for key = 1, 100 do space:delete({key, key}) end
---
...
for key = 1, 100 do assert(space:get({key, key}) == nil) end
---
...
space:delete({7, 7})
---
...
space:drop()
---
...
-- delete (str)
space = box.schema.space.create('test', { engine = engine })
---
...
index = space:create_index('primary', { type = 'tree', parts = {1, 'str'} })
---
...
for key = 1, 100 do space:replace({tostring(key)}) end
---
...
t = {}
---
...
for key = 1, 100 do table.insert(t, space:get({tostring(key)})) end
---
...
t
---
- - ['1']
  - ['2']
  - ['3']
  - ['4']
  - ['5']
  - ['6']
  - ['7']
  - ['8']
  - ['9']
  - ['10']
  - ['11']
  - ['12']
  - ['13']
  - ['14']
  - ['15']
  - ['16']
  - ['17']
  - ['18']
  - ['19']
  - ['20']
  - ['21']
  - ['22']
  - ['23']
  - ['24']
  - ['25']
  - ['26']
  - ['27']
  - ['28']
  - ['29']
  - ['30']
  - ['31']
  - ['32']
  - ['33']
  - ['34']
  - ['35']
  - ['36']
  - ['37']
  - ['38']
  - ['39']
  - ['40']
  - ['41']
  - ['42']
  - ['43']
  - ['44']
  - ['45']
  - ['46']
  - ['47']
  - ['48']
  - ['49']
  - ['50']
  - ['51']
  - ['52']
  - ['53']
  - ['54']
  - ['55']
  - ['56']
  - ['57']
  - ['58']
  - ['59']
  - ['60']
  - ['61']
  - ['62']
  - ['63']
  - ['64']
  - ['65']
  - ['66']
  - ['67']
  - ['68']
  - ['69']
  - ['70']
  - ['71']
  - ['72']
  - ['73']
  - ['74']
  - ['75']
  - ['76']
  - ['77']
  - ['78']
  - ['79']
  - ['80']
  - ['81']
  - ['82']
  - ['83']
  - ['84']
  - ['85']
  - ['86']
  - ['87']
  - ['88']
  - ['89']
  - ['90']
  - ['91']
  - ['92']
  - ['93']
  - ['94']
  - ['95']
  - ['96']
  - ['97']
  - ['98']
  - ['99']
  - ['100']
...
for key = 1, 100 do space:delete(box.tuple.new{tostring(key)}) end
---
...
for key = 1, 100 do assert(space:get({tostring(key)}) == nil) end
---
...
space:delete(box.tuple.new{tostring(7)})
---
...
space:drop()
---
...
-- delete with multiple indices
space = box.schema.space.create('test', { engine = engine })
---
...
index1 = space:create_index('primary', { type = 'tree', parts = {1, 'num'} })
---
...
index2 = space:create_index('secondary', { type = 'tree', parts = {2, 'str', 3, 'scalar'}})
---
...
index3 = space:create_index('third', { type = 'tree', parts = {1, 'num', 3, 'scalar'}})
---
...
space:insert({1, 'abc', 100})
---
- [1, 'abc', 100]
...
space:insert({3, 'weif', 345})
---
- [3, 'weif', 345]
...
space:insert({2, 'gbot', '023'})
---
- [2, 'gbot', '023']
...
space:insert({10, 'dflgner', 532.123})
---
- [10, 'dflgner', 532.123]
...
space:insert({0, 'igkkm', 4902})
---
- [0, 'igkkm', 4902]
...
index1:select{}
---
- - [0, 'igkkm', 4902]
  - [1, 'abc', 100]
  - [2, 'gbot', '023']
  - [3, 'weif', 345]
  - [10, 'dflgner', 532.123]
...
index2:select{}
---
- - [1, 'abc', 100]
  - [10, 'dflgner', 532.123]
  - [2, 'gbot', '023']
  - [0, 'igkkm', 4902]
  - [3, 'weif', 345]
...
index3:select{}
---
- - [0, 'igkkm', 4902]
  - [1, 'abc', 100]
  - [2, 'gbot', '023']
  - [3, 'weif', 345]
  - [10, 'dflgner', 532.123]
...
tmp = index1:delete({1})
---
...
tmp = index2:delete({'weif'}) -- must fail
---
- error: Invalid key part count in an exact match (expected 2, got 1)
...
tmp = index2:delete({'weif', 345})
---
...
tmp = index2:delete({'weif', 345})
---
...
tmp = index3:delete({2, '023'})
---
...
index1:select{}
---
- - [0, 'igkkm', 4902]
  - [10, 'dflgner', 532.123]
...
index2:select{}
---
- - [10, 'dflgner', 532.123]
  - [0, 'igkkm', 4902]
...
index3:select{}
---
- - [0, 'igkkm', 4902]
  - [10, 'dflgner', 532.123]
...
space:drop()
---
...
