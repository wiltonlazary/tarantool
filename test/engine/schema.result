env = require('test_run')
---
...
test_run = env.new()
---
...
engine = test_run:get_cfg('engine')
---
...
test_run:cmd("push filter '"..engine.."' to 'engine'")
---
- true
...
space = box.schema.space.create('tweedledum', { id = 0, engine = engine })
---
...
index = space:create_index('primary')
---
...
t = {} for k,v in pairs(box.space.tweedledum) do if type(v) ~= 'table' and type(v) ~= 'function' then table.insert(t, k..': '..tostring(v)) end end
---
...
t
---
- - 'temporary: false'
  - 'id: 0'
  - 'engine: engine'
  - 'enabled: true'
  - 'name: tweedledum'
  - 'field_count: 0'
...
space:drop()
---
...
id = box.schema.space.create('sp_1266', { engine = engine }).id
---
...
s = box.schema.space.create('sp_1266', { engine = engine })
---
- error: Space 'sp_1266' already exists
...
s = box.schema.space.create('sp_1266', { if_not_exists = true, engine = engine })
---
...
box.schema.space.drop(id, 'sp_1266')
---
...
box.schema.space.drop(id, 'sp_1266', { if_exists = true })
---
...
box.schema.space.drop(id, 'sp_1266')
---
- error: Space 'sp_1266' does not exist
...
test_run:cmd("clear filter")
---
- true
...
